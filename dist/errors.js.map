{"version":3,"sources":["../src/errors.ts"],"sourcesContent":["/**\n * Represents a collection of custom error definitions and a utility method\n * for retrieving structured error details based on an error message.\n */\nclass CustomErrors {\n    /**\n     * A map of predefined errors, keyed by their result messages, providing\n     * additional details such as result codes and detailed error descriptions.\n     */\n    private static errors: { \n      [key: string]: { \n        resultCode: number; \n        resultMessageLarge: string; \n        result: any; \n      } \n    } = {\n      \"game not found\": {\n        resultCode: -1,\n        resultMessageLarge: \"The provided game ID was not found. Have you entered the proper client configuration?\",\n        result: null\n      },\n      \"user not found\": {\n        resultCode: -1,\n        resultMessageLarge: \"The provided user ID was not found. Have you entered the proper client configuration?\",\n        result: null\n      }\n    };\n  \n    /**\n     * Retrieves a structured error object based on a given result message.\n     *\n     * @param resultMessage - The error message to look up.\n     * @returns An object containing the error details, including result codes,\n     *          detailed messages, and additional metadata. If the error is not\n     *          found, a default \"unknown error\" response is returned.\n     *\n     * @example\n     * ```typescript\n     * const error = CustomErrors.getError(\"game not found\");\n     * console.log(error);\n     * // {\n     * //   resultCode: -1,\n     * //   resultMessage: \"game not found\",\n     * //   resultMessageLarge: \"The provided game ID was not found. Have you entered the proper client configuration?\",\n     * //   result: null,\n     * //   version: \"4831_live\"\n     * // }\n     * ```\n     */\n    static getError(resultMessage: string): { \n      resultCode: number; \n      resultMessage: string; \n      resultMessageLarge: string; \n      result: any; \n      version: string; \n    } | null {\n      const error = this.errors[resultMessage];\n      return {\n        resultCode: error ? error.resultCode : -1,\n        resultMessage,\n        resultMessageLarge: error ? error.resultMessageLarge : \"Unknown error\",\n        result: error ? error.result : null,\n        version: \"4831_live\" // I don't really know if the real API version changes, so as of now I'll keep it like this.\n      };\n    }\n  }\n  \n  export default CustomErrors;\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,IAAM,eAAN,MAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6Cf,OAAO,SAAS,eAMP;AACP,UAAM,QAAQ,KAAK,OAAO,aAAa;AACvC,WAAO;AAAA,MACL,YAAY,QAAQ,MAAM,aAAa;AAAA,MACvC;AAAA,MACA,oBAAoB,QAAQ,MAAM,qBAAqB;AAAA,MACvD,QAAQ,QAAQ,MAAM,SAAS;AAAA,MAC/B,SAAS;AAAA;AAAA,IACX;AAAA,EACF;AACF;AAAA;AAAA;AAAA;AAAA;AA7DI,aAKa,SAMX;AAAA,EACF,kBAAkB;AAAA,IAChB,YAAY;AAAA,IACZ,oBAAoB;AAAA,IACpB,QAAQ;AAAA,EACV;AAAA,EACA,kBAAkB;AAAA,IAChB,YAAY;AAAA,IACZ,oBAAoB;AAAA,IACpB,QAAQ;AAAA,EACV;AACF;AAyCF,IAAO,iBAAQ;","names":[]}